#!/bin/bash
# This goes in the Home directory
################################################
#: Title             : .functions
#: Creation date     : 08-27-2015
#: Author            : Jean Michel Cote
#: Github            : https://github.com/jeanmichelcote/serverUtils
#: Version           : 2.0
#: Description       : Use to get instant reports from the server about the hits and visits
################################################
#
## EDITABLES ###############################################################
ACCESSLOG="${HOME}/logs/depalmaproductions.com/http/access.log"  # "/home/user/logs/website.com/http/access.log" on apache
## END EDITABLES ##########################################################

# Styles
STRONG="\033[1;42m"
BOLD="\033[1;32m"
UND="\033[4;32m"
NC="\033[0m"

hitstoday() {
  local usage LOG
  today=$(date +%d\/%b\/%Y)

  usage="--------------------------------------------------------------
  ${STRONG}USAGE${NC}:
  This script accepts zero (0) or (1) argument.
  Enclose in double quotes when typing more than one word (\" \").

    \$1 = Full path to the access.log file to query (optional).

  If no argument is supplied, this function will query the default log file.
  --------------------------------------------------------------"

  [[ "$#" -gt 1 ]] && echo -e "$usage" && return 1
  LOG="${1:-ACCESSLOG}"

  awk -v pat="$today" '$0 ~ pat { n++ } END { print n, "visits today." }' "$LOG"
  grep "$today" "$LOG" | cut -d[ -f2 | cut -d] -f1 | awk -F: '{print "| "$2":00"}' | sort -n | uniq -c

  unset today usage LOG
}

hitsbyips() {
  local usage LOG
  today=$(date +%d\/%b\/%Y)

  usage="--------------------------------------------------------------
  ${STRONG}USAGE${NC}:
  This script accepts zero (0) or (1) argument.
  Enclose in double quotes when typing more than one word (\" \").

    \$1 = Full path to the access.log file to query (optional).

  If no argument is supplied, this function will query the defaugt log file.
 --------------------------------------------------------------"
  [[ "$#" -gt 1 ]] && echo -e "$usage" && return 1
  #LOG=$( [[ ! -z "$*" ]] && echo "$1" || echo "$ACCESSLOG" )
  LOG="${1:-$ACCESSLOG}"

  awk -v pat="$today" '$0 ~ pat {ips[$1]++}
  END {
    for (ip in ips) {
      cmd = "host " ip " | cut -d\" \" -f 5 "
      if ( (cmd | getline host) <= 0 ) {
        host = "N/A"
      }
      close(cmd)
      printf "%-3s | %16s | %s\n", ips[ip], ip, host
    }
  }' "$LOG" | sort -nk1

  unset LOG
}

hitsbyhour() {
  local hr usage LOG
  today=$(date +%d\/%b\/%Y)

  usage="--------------------------------------------------------------
  ${STRONG}USAGE${NC}:
  This script accepts zero (0), (1) or (2) arguments.
  Enclose in double quotes when typing more than one word (\" \").

   \$1 = Hour to query (2 digits)
   \$2 = Full path to the access.log file to query (optional).

  If no argument is supplied, this function will query the default log file and will show stats for every hour.
  --------------------------------------------------------------"

  [[ "$#" -gt 2 ]] && echo -e "$usage" && unset hr usage LOG && return 1

  if [[ ! -z "$1" ]]; then
    case $1 in
      2[0-3]|1[0-9]|0[0-9]  )  hr="$1" ;;
      *                         )  echo -e "${UND}The first argument needs to be between [00 - 23]${NC}" && return 1 ;;
    esac
  fi

  LOG="${2:-$ACCESSLOG}"

  grep "${today}:${hr}" "$LOG" | cut -d[ -f2 | cut -d] -f1 | awk -F: '{print "| "$2":"$3}' | sort -nk1 -nk2 | uniq -c
  unset hr usage LOG
}

hitsbytime() {
  local theTime usage
  today=$(date +%d\/%b\/%Y)

  usage="--------------------------------------------------------------
  ${STRONG}USAGE${NC}:
  This script accepts one (1) or (2) arguments.
  Enclose in double quotes when typing more than one word (\" \").

   \$1 = Full time to query in the format [hr:min], ex: 07:24
   \$2 = Full path to the access.log file to query (optional)
  --------------------------------------------------------------"

  [[ "$#" -gt 2 ]] || [[ "$#" -eq 0 ]] && echo -e "$usage" && unset theTime usage && return 1

  case $1 in
    [0-2][0-3]:[0-5][0-9]	           )  theTime="$1" ;;
    *                                      )  echo -e "${UND}The first argument needs to be in the format [hr:min], ex: 07:24${NC}" && return 1 ;;
  esac

  LOG="${2:-$ACCESSLOG}"

  grep "${today}:${theTime}" "$LOG" |
  awk '{ips[$1]++}
    END {
      for (ip in ips) {
        cmd = "host " ip " | cut -d\" \" -f5"
        if ( (cmd | getline host) <= 0 ) {
          host = "N/A"
        }
        close(cmd)
        printf "%-3s | %16s | %s\n", ips[ip], ip, host
      }
    }' | sort -nk1

    unset theTime usage
}

livelog() {
  tail -f -q "$ACCESSLOG" | awk '{print $1}'
}